<Page
	x:Class="Hackus_Mail_Checker_Reforged.UI.Pages.Overlays.ConfigurationPage" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:enums="clr-namespace:Hackus_Mail_Checker_Reforged.Models.Enums" xmlns:hc="https://handyorg.github.io/handycontrol" xmlns:local="clr-namespace:Hackus_Mail_Checker_Reforged.UI.Pages.Overlays" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	Title="ConfigurationPage">
	<Grid>
		<Border
			Background="#FF000000"
			CornerRadius="5"
			Cursor="Hand"
			Opacity="0.5">
			<hc:Interaction.Triggers>
				<hc:EventTrigger
					EventName="MouseDown">
					<hc:EventToCommand
						Command="{Binding CloseOverlayCommand}" />
				</hc:EventTrigger>
			</hc:Interaction.Triggers>
		</Border>
		<hc:TransitioningContentControl>
			<hc:TransitioningContentControl.TransitionStoryboard>
				<Storyboard>
					<DoubleAnimation
						Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
						From=".9"
						To="1"
						Duration="0:0:0.4">
						<DoubleAnimation.EasingFunction>
							<ElasticEase
								Oscillations="1" />
						</DoubleAnimation.EasingFunction>
					</DoubleAnimation>
					<DoubleAnimation
						Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
						From=".9"
						To="1"
						Duration="0:0:0.4">
						<DoubleAnimation.EasingFunction>
							<ElasticEase
								Oscillations="1" />
						</DoubleAnimation.EasingFunction>
					</DoubleAnimation>
				</Storyboard>
			</hc:TransitioningContentControl.TransitionStoryboard>
			<Border
				Width="600"
				Height="560"
				Background="#242424"
				BorderBrush="#2c2c2c"
				BorderThickness="2"
				CornerRadius="4">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition
							Height="65" />
						<RowDefinition
							Height="30" />
						<RowDefinition
							Height="200" />
						<RowDefinition
							Height="30" />
						<RowDefinition />
					</Grid.RowDefinitions>
					<hc:Divider
						Margin="0,20,0,0"
						LineStroke="#64FFDA"
						LineStrokeThickness="3">
						<hc:Divider.Content>
							<Path
								Name="SettingsPathElement"
								Fill="#64FFDA"
								RenderTransformOrigin="0.5, 0.5"
								Style="{StaticResource SettingsIcon}">
								<UIElement.RenderTransform>
									<ScaleTransform
										ScaleX="1.3"
										ScaleY="1.3" />
								</UIElement.RenderTransform>
							</Path>
						</hc:Divider.Content>
					</hc:Divider>
					<Grid
						Row="1"
						Margin="20,0,20,0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition />
							<ColumnDefinition
								Width="10" />
							<ColumnDefinition
								Width="120" />
						</Grid.ColumnDefinitions>
						<hc:TextBox
							Height="30"
							Padding="13,0,0,0"
							BorderElement.CornerRadius="4"
							InfoElement.Placeholder="{DynamicResource l_MainDataGridSearchPlaceholder}"
							BorderThickness="0"
							FontFamily="{StaticResource Roboto-Regular}"
							FontSize="13"
							Foreground="#d9d9d9"
							Text="{Binding SearchQuery, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
							<UIElement.InputBindings>
								<KeyBinding
									Key="Enter"
									Command="{Binding SearchCommand}" />
							</UIElement.InputBindings>
						</hc:TextBox>
						<ComboBox
							Grid.Column="2"
							hc:BorderElement.CornerRadius="4"
							hc:ThemeManager.RequestedAccentColor="#383838"
							BorderThickness="0,0,0,0"
							SelectedIndex="0"
							ItemsSource="{Binding Source={hc:EnumBindingSource {x:Type enums:SearchServerType}}}"
							SelectedItem="{Binding SearchType}" />
					</Grid>
					<Grid
						Row="2"
						Margin="20,20,20,0">
						<Border
							Name="ConfigutationDataGridMaskBorder"
							Background="{DynamicResource BlockBackgroundBrush}"
							CornerRadius="4 4 0 0" />
						<DataGrid
							Name="ResultsDataGrid"
							AutoGenerateColumns="False"
							Background="#00FFFFFF"
							BorderThickness="1"
							CanUserAddRows="False"
							HeadersVisibility="None"
							HorizontalScrollBarVisibility="Disabled"
							IsReadOnly="True"
							RowHeight="35"
							SelectionMode="Single"
							ItemsSource="{Binding FilteredServers}">
							<UIElement.OpacityMask>
								<VisualBrush
									Visual="{Binding ElementName=ConfigutationDataGridMaskBorder}" />
							</UIElement.OpacityMask>
							<DataGrid.Columns>
								<DataGridTextColumn
									Width="*"
									Binding="{Binding Domain}">
									<DataGridColumn.CellStyle>
										<Style
											BasedOn="{StaticResource DataGridCellStyle}"
											TargetType="{x:Type DataGridCell}">
											<Setter
												Property="Padding"
												Value="10,0,10,0" />
											<Setter
												Property="Foreground"
												Value="#e1e1e1" />
											<Style.Triggers>
												<Trigger
													Property="DataGridCell.IsSelected"
													Value="True">
													<Setter
														Property="Background"
														Value="#383838" />
												</Trigger>
											</Style.Triggers>
										</Style>
									</DataGridColumn.CellStyle>
								</DataGridTextColumn>
								<DataGridTextColumn
									Width="*"
									Binding="{Binding Hostname}">
									<DataGridColumn.CellStyle>
										<Style
											BasedOn="{StaticResource DataGridCellStyle}"
											TargetType="{x:Type DataGridCell}">
											<Setter
												Property="Padding"
												Value="10,0,10,0" />
											<Setter
												Property="Foreground"
												Value="#e1e1e1" />
											<Style.Triggers>
												<Trigger
													Property="DataGridCell.IsSelected"
													Value="True">
													<Setter
														Property="Background"
														Value="#383838" />
												</Trigger>
											</Style.Triggers>
										</Style>
									</DataGridColumn.CellStyle>
								</DataGridTextColumn>
								<DataGridTextColumn
									Width="0.5*"
									Binding="{Binding Port}">
									<DataGridColumn.CellStyle>
										<Style
											BasedOn="{StaticResource DataGridCellStyle}"
											TargetType="{x:Type DataGridCell}">
											<Setter
												Property="Padding"
												Value="10,0,10,0" />
											<Setter
												Property="Foreground"
												Value="#e1e1e1" />
											<Style.Triggers>
												<Trigger
													Property="DataGridCell.IsSelected"
													Value="True">
													<Setter
														Property="Background"
														Value="#383838" />
												</Trigger>
											</Style.Triggers>
										</Style>
									</DataGridColumn.CellStyle>
								</DataGridTextColumn>
								<DataGridTemplateColumn
									Width="0.5*">
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<Label
												Height="23"
												Padding="6,4,6,4"
												FontSize="10"
												Content="{Binding Protocol}" />
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
									<DataGridColumn.CellStyle>
										<Style
											BasedOn="{StaticResource DataGridCellStyle}"
											TargetType="{x:Type DataGridCell}">
											<Setter
												Property="Padding"
												Value="10,0,10,0" />
											<Setter
												Property="Foreground"
												Value="#e1e1e1" />
											<Style.Triggers>
												<Trigger
													Property="DataGridCell.IsSelected"
													Value="True">
													<Setter
														Property="Background"
														Value="#383838" />
												</Trigger>
											</Style.Triggers>
										</Style>
									</DataGridColumn.CellStyle>
								</DataGridTemplateColumn>
								<DataGridTemplateColumn
									Width="0.5*">
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<Label
												Height="23"
												Padding="6,4,6,4"
												FontSize="10"
												Content="{Binding Socket}">
												<FrameworkElement.Style>
													<Style
														BasedOn="{StaticResource Label}"
														TargetType="{x:Type Label}">
														<Style.Triggers>
															<DataTrigger
																Value="SSL"
																Binding="{Binding Socket}">
																<Setter
																	Property="BorderBrush"
																	Value="#8affc3" />
															</DataTrigger>
														</Style.Triggers>
													</Style>
												</FrameworkElement.Style>
											</Label>
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
									<DataGridColumn.CellStyle>
										<Style
											BasedOn="{StaticResource DataGridCellStyle}"
											TargetType="{x:Type DataGridCell}">
											<Setter
												Property="Padding"
												Value="10,0,10,0" />
											<Setter
												Property="Foreground"
												Value="#e1e1e1" />
											<Style.Triggers>
												<Trigger
													Property="DataGridCell.IsSelected"
													Value="True">
													<Setter
														Property="Background"
														Value="#383838" />
												</Trigger>
											</Style.Triggers>
										</Style>
									</DataGridColumn.CellStyle>
								</DataGridTemplateColumn>
								<DataGridTemplateColumn
									Width="0.4*">
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<Button
												Width="23"
												Height="23"
												Padding="0"
												BorderBrush="#ff7a7b"
												Command="{Binding DataContext.CopyCommand, RelativeSource={RelativeSource AncestorType=Page}}"
												CommandParameter="{Binding}">
												<Path
													Margin="0,0,2,0"
													HorizontalAlignment="Center"
													VerticalAlignment="Center"
													Fill="#d9d9d9"
													RenderTransformOrigin="0.5, 0.5"
													Style="{StaticResource EditIcon}">
													<UIElement.RenderTransform>
														<ScaleTransform
															ScaleX="0.6"
															ScaleY="0.6" />
													</UIElement.RenderTransform>
												</Path>
											</Button>
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
									<DataGridColumn.CellStyle>
										<Style
											BasedOn="{StaticResource DataGridCellStyle}"
											TargetType="{x:Type DataGridCell}">
											<Setter
												Property="Padding"
												Value="10,0,10,0" />
											<Setter
												Property="Foreground"
												Value="#e1e1e1" />
											<Style.Triggers>
												<Trigger
													Property="DataGridCell.IsSelected"
													Value="True">
													<Setter
														Property="Background"
														Value="#383838" />
												</Trigger>
											</Style.Triggers>
										</Style>
									</DataGridColumn.CellStyle>
								</DataGridTemplateColumn>
								<DataGridTemplateColumn
									Width="0.4*">
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<Button
												Width="23"
												Height="23"
												Padding="0"
												BorderBrush="#ff7a7b"
												Command="{Binding DataContext.RemoveCommand, RelativeSource={RelativeSource AncestorType=Page}}"
												CommandParameter="{Binding}">
												<Path
													Margin="0,0,2,0"
													HorizontalAlignment="Center"
													VerticalAlignment="Center"
													Data="{StaticResource CloseGeometry}"
													Fill="#d9d9d9"
													RenderTransformOrigin="0.5, 0.5" />
											</Button>
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
									<DataGridColumn.CellStyle>
										<Style
											BasedOn="{StaticResource DataGridCellStyle}"
											TargetType="{x:Type DataGridCell}">
											<Setter
												Property="Padding"
												Value="10,0,10,0" />
											<Setter
												Property="Foreground"
												Value="#e1e1e1" />
											<Style.Triggers>
												<Trigger
													Property="DataGridCell.IsSelected"
													Value="True">
													<Setter
														Property="Background"
														Value="#383838" />
												</Trigger>
											</Style.Triggers>
										</Style>
									</DataGridColumn.CellStyle>
								</DataGridTemplateColumn>
							</DataGrid.Columns>
							<DataGrid.RowStyle>
								<Style
									BasedOn="{StaticResource DataGridRowStyle}"
									TargetType="{x:Type DataGridRow}">
									<Style.Triggers>
										<Trigger
											Property="UIElement.IsMouseOver"
											Value="True">
											<Setter
												Property="Background"
												Value="#333333" />
										</Trigger>
										<Trigger
											Property="DataGridRow.IsSelected"
											Value="True">
											<Setter
												Property="Background"
												Value="#383838" />
										</Trigger>
									</Style.Triggers>
								</Style>
							</DataGrid.RowStyle>
						</DataGrid>
						<Grid
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Visibility="{Binding Items.IsEmpty, ElementName=ResultsDataGrid, Converter={StaticResource Boolean2VisibilityConverter}}">
							<Path
								Margin="0,0,0,40"
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								Fill="#d9d9d9"
								RenderTransformOrigin="0.5, 0.5"
								Style="{StaticResource SearchIcon}">
								<UIElement.RenderTransform>
									<ScaleTransform
										ScaleX="2.3"
										ScaleY="2.3" />
								</UIElement.RenderTransform>
							</Path>
							<TextBlock
								Margin="0,90,0,0"
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								FontFamily="{StaticResource Roboto-Regular}"
								FontSize="20"
								Foreground="#d9d9d9"
								Text="{DynamicResource l_NoResults}" />
						</Grid>
					</Grid>
					<Grid
						Row="3"
						Margin="20,0,20,0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition />
							<ColumnDefinition />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>
						<Button
							Grid.Column="0"
							HorizontalAlignment="Stretch"
							hc:BorderElement.CornerRadius="0 0 0 4"
							BorderThickness="1,0,1,1"
							Content="{DynamicResource l_Add}"
							Focusable="False"
							FontFamily="{StaticResource Roboto-Regular}"
							FontSize="13"
							Foreground="#d9d9d9"
							Command="{Binding AddCommand}" />
						<Button
							Grid.Column="1"
							HorizontalAlignment="Stretch"
							hc:BorderElement.CornerRadius="0"
							BorderThickness="1,0,1,1"
							Content="{DynamicResource l_Edit}"
							Focusable="False"
							FontFamily="{StaticResource Roboto-Regular}"
							FontSize="13"
							Foreground="#d9d9d9"
							Command="{Binding EditCommand}" />
						<Button
							Grid.Column="2"
							HorizontalAlignment="Stretch"
							hc:BorderElement.CornerRadius="0 0 4 0"
							BorderThickness="1,0,1,1"
							Content="{DynamicResource l_Reset}"
							Focusable="False"
							FontFamily="{StaticResource Roboto-Regular}"
							FontSize="13"
							Foreground="#d9d9d9"
							Command="{Binding ResetCommand}" />
					</Grid>
					<Grid
						Row="4"
						Margin="20,0,20,0">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition
									Width="30" />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>
							<StackPanel
								Margin="0,15,0,0"
								Orientation="Vertical">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition />
										<ColumnDefinition
											Width="80" />
									</Grid.ColumnDefinitions>
									<StackPanel
										Margin="0,0,5,0"
										Orientation="Vertical">
										<TextBlock
											Margin="5,0,0,5"
											FontFamily="{StaticResource Roboto-Regular}"
											FontSize="13"
											Foreground="#d9d9d9"
											Text="{DynamicResource l_Domain}" />
										<hc:TextBox
											ThemeManager.RequestedAccentColor="#64FFD1"
											FontFamily="{StaticResource Roboto-Regular}"
											FontSize="13"
											Foreground="#d9d9d9"
											Text="{Binding EditServer.Domain, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
									</StackPanel>
									<StackPanel
										Grid.Column="1"
										Margin="5,0,0,0"
										Orientation="Vertical">
										<TextBlock
											Margin="5,0,0,5"
											FontFamily="{StaticResource Roboto-Regular}"
											FontSize="13"
											Foreground="#d9d9d9"
											Text="{DynamicResource l_Port}" />
										<hc:NumericUpDown
											ThemeManager.RequestedAccentColor="#64FFD1"
											FontFamily="{StaticResource Roboto-Regular}"
											FontSize="13"
											Foreground="#d9d9d9"
											Value="{Binding EditServer.Port, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
									</StackPanel>
								</Grid>
								<TextBlock
									Margin="5,10,0,5"
									FontFamily="{StaticResource Roboto-Regular}"
									FontSize="13"
									Foreground="#d9d9d9"
									Text="{DynamicResource l_Hostname}" />
								<hc:TextBox
									ThemeManager.RequestedAccentColor="#64FFD1"
									FontFamily="{StaticResource Roboto-Regular}"
									FontSize="13"
									Foreground="#d9d9d9"
									Text="{Binding EditServer.Hostname, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
								<Grid
									Margin="0,15,0,0"
									Focusable="False">
									<hc:ButtonGroup
										Width="125"
										HorizontalAlignment="Left"
										ThemeManager.RequestedAccentColor="#64FFD1"
										Focusable="False"
										FontFamily="{StaticResource Roboto-Regular}"
										FontSize="13"
										Foreground="#d9d9d9">
										<RadioButton
											Content="SSL"
											Focusable="False"
											IsChecked="{Binding EditServer.Socket, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=SSL, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
										<RadioButton
											Content="Plain"
											Focusable="False"
											IsChecked="{Binding EditServer.Socket, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Plain, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
									</hc:ButtonGroup>
									<hc:ButtonGroup
										Width="125"
										HorizontalAlignment="Right"
										ThemeManager.RequestedAccentColor="#64FFD1"
										Focusable="False"
										FontFamily="{StaticResource Roboto-Regular}"
										FontSize="13"
										Foreground="#d9d9d9">
										<RadioButton
											Content="IMAP"
											Focusable="False"
											IsChecked="{Binding EditServer.Protocol, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=IMAP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
										<RadioButton
											Content="POP3"
											Focusable="False"
											IsChecked="{Binding EditServer.Protocol, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=POP3, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
									</hc:ButtonGroup>
								</Grid>
								<Button
									Margin="0,15,0,0"
									HorizontalAlignment="Stretch"
									hc:ThemeManager.RequestedAccentColor="#64FFD1"
									BorderBrush="#ff7a7b"
									Content="{DynamicResource l_CheckConnection}"
									Focusable="False"
									FontFamily="{StaticResource Roboto-Regular}"
									FontSize="13"
									Foreground="#d9d9d9"
									Command="{Binding ConnectCommand}" />
							</StackPanel>
							<hc:Divider
								Grid.Column="1"
								Margin="0"
								Padding="0"
								LineStrokeDashArray="5, 5"
								LineStrokeThickness="2"
								Orientation="Vertical" />
							<StackPanel
								Grid.Column="2"
								Margin="0,15,0,0">
								<TextBlock
									Margin="5,0,0,5"
									FontFamily="{StaticResource Roboto-Regular}"
									FontSize="13"
									Foreground="#d9d9d9"
									Text="{DynamicResource l_Login}" />
								<hc:TextBox
									ThemeManager.RequestedAccentColor="#64FFD1"
									Text="{Binding Login, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
								<TextBlock
									Margin="5,10,0,5"
									FontFamily="{StaticResource Roboto-Regular}"
									FontSize="13"
									Foreground="#d9d9d9"
									Text="{DynamicResource l_Password}" />
								<hc:TextBox
									ThemeManager.RequestedAccentColor="#64FFD1"
									Text="{Binding Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
								<Button
									Margin="0,15,0,0"
									HorizontalAlignment="Stretch"
									hc:ThemeManager.RequestedAccentColor="#64FFD1"
									BorderBrush="#ff7a7b"
									Content="{DynamicResource l_Enter}"
									Focusable="False"
									FontFamily="{StaticResource Roboto-Regular}"
									FontSize="13"
									Foreground="#d9d9d9"
									Command="{Binding LoginCommand}" />
							</StackPanel>
						</Grid>
					</Grid>
					<Border
						Grid.RowSpan="5"
						Visibility="{Binding IsLoading, Converter={StaticResource Boolean2VisibilityConverter}}">
						<Border.Background>
							<SolidColorBrush
								Opacity="0.6"
								Color="Black" />
						</Border.Background>
						<hc:CircleProgressBar
							ThemeManager.RequestedAccentColor="#64FFD1"
							IsIndeterminate="True" />
					</Border>
				</Grid>
			</Border>
		</hc:TransitioningContentControl>
	</Grid>
</Page>
